---
# Brew.
- name: Ensure configured homebrew packages are installed.
  homebrew:
    name: "{{ item.name | default(item) }}"
    install_options: "{{ item.install_options | default(omit) }}"
    state: present
  with_items: "{{ homebrew_installed_packages }}"

- name: Ensure configured homebrew packages are uninstalled.
  homebrew:
    name: "{{ item.name | default(item) }}"
    state: absent
  with_items: "{{ homebrew_uninstalled_packages }}"

# Cask.
- name: Install configured cask applications.
  homebrew_cask:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
    install_options: "appdir={{ homebrew_cask_appdir }}"
  with_items: "{{ homebrew_cask_installed_apps }}"

- name: Uninstall configured cask applications.
  homebrew_cask:
    name: "{{ item.name | default(item) }}"
    state: absent
  with_items: "{{ homebrew_cask_uninstalled_apps }}"

- name: Install global Composer packages.
  composer:
    command: "{{ (item.state | default('present') == 'absent') | ternary('remove', 'require') }}"
    arguments: "{{ item.name | default(item) }} {{ item.version | default('@stable') }}"
    # Ansible 2.4 supports `global_command` making `working_dir` optional.
    working_dir: "{{ lookup('env', 'COMPOSER_HOME') | default('~/.composer', true) }}"
  with_items: "{{ composer_packages }}"

- name: Install global NPM packages.
  npm:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
    version: "{{ item.version | default(omit) }}"
    global: yes
    executable: "{{ item.executable | default(omit) }}"
  with_items: "{{ npm_packages }}"

- name: Install global Pip packages.
  pip:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
    version: "{{ item.version | default(omit) }}"
    executable: "{{ item.executable | default(omit) }}"
  with_items: "{{ pip_packages }}"

- name: Install global Ruby gems.
  gem:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
    version: "{{ item.version | default(omit) }}"
    user_install: no
    executable: "{{ item.executable | default(omit) }}"
  with_items: "{{ gem_packages }}"

- name: Apply go get constabulary/gb.
  command: "{{ item.cmd }}"
  with_items: "{{ mydotfiles_commands }}"

- name: Ensure directory exists.
  file:
    path: "{{ item }}"
    state: directory
  with_items:
      - ~/.bash
      - ~/.config/nvim
  become: yes
  become_user: "{{ ansible_user_id }}"

- name: Copy files
  copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
  with_items:
      - { src: "bash_profile", dest: "~/.bash_profile" }
      - { src: "myalias", dest: "~/.bash/myalias" }
      - { src: "myenv", dest: "~/.bash/myenv" }
      - { src: "init.vim", dest: "~/.config/nvim/init.vim" }
      - { src: "powerline-shell.json", dest: "~/.powerline-shell.json" }
  become: yes
  become_user: "{{ ansible_user_id }}"
